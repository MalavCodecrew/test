{% comment %} <div id="spin-to-win" class="spin-popup">
  <div class="wheel-container">
    <div class="wheel-pin"></div>
    <canvas id="wheel-canvas" width="500" height="500"></canvas>
    <button id="spin-button" class="spin-button">Spin</button>
  </div>
  <button id="close-button" class="close-button">Close</button>
  <div id="prize-result" class="prize-result"></div>
</div>

<script>
 // Prizes Array
const prizes = [
  "10% Off",
  "20% Off",
  "Free Shipping",
  "No Prize",
  "15% Off",
  "Buy 1 Get 1 Free",
  "25% Off",
  "50% Off",
];

let spinning = false;

// Function to Draw the Wheel
function drawWheel() {
  const canvas = document.getElementById("wheel-canvas");
  const ctx = canvas.getContext("2d");
  const segments = prizes.length;
  const arc = (2 * Math.PI) / segments;

  prizes.forEach((prize, i) => {
    const startAngle = i * arc;
    const endAngle = startAngle + arc;

    ctx.beginPath();
    ctx.moveTo(250, 250);
    ctx.arc(250, 250, 250, startAngle, endAngle);
    ctx.fillStyle = i % 2 === 0 ? "#f4c542" : "#ff6f61";
    ctx.fill();

    ctx.save();
    ctx.translate(
      250 + Math.cos(startAngle + arc / 2) * 180,
      250 + Math.sin(startAngle + arc / 2) * 180
    );
    ctx.rotate(startAngle + arc / 2);
    ctx.fillStyle = "#fff";
    ctx.font = "16px Arial";
    ctx.textAlign = "center";
    ctx.fillText(prize, 0, 0);
    ctx.restore();
  });
}

// Spin the Wheel
function spinWheel() {
  if (spinning) return;
  spinning = true;

  const canvas = document.getElementById("wheel-canvas");
  const ctx = canvas.getContext("2d");
  const segments = prizes.length;
  const arc = (2 * Math.PI) / segments;

  let currentAngle = 0;
  let spinAngle = Math.random() * 360 + 360 * 5; // Random stop angle + multiple spins
  let spinSpeed = 20; // Initial speed

  const spinInterval = setInterval(() => {
    spinSpeed *= 0.98; // Gradually reduce speed
    currentAngle += spinSpeed;

    ctx.clearRect(0, 0, 500, 500);
    ctx.save();
    ctx.translate(250, 250);
    ctx.rotate((currentAngle * Math.PI) / 180);
    ctx.translate(-250, -250);
    drawWheel();
    ctx.restore();

    if (spinSpeed < 0.5) {
      clearInterval(spinInterval);
      const finalAngle = (360 - (currentAngle % 360)) * (Math.PI / 180);
      const index = Math.floor(
        (segments - Math.floor((finalAngle / (2 * Math.PI)) * segments)) %
          segments
      );
      document.getElementById("prize-result").textContent = `You won: ${prizes[index]}!`;
      spinning = false;
    }
  }, 30);
}

// Event Listeners
document.getElementById("spin-button").addEventListener("click", spinWheel);

document.getElementById("close-button").addEventListener("click", () => {
  document.getElementById("spin-to-win").classList.remove("active");
});

// Display the Popup after 3 Seconds
setTimeout(() => {
  document.getElementById("spin-to-win").classList.add("active");
}, 3000);

// Initialize Wheel
drawWheel();

</script>
 {% endcomment %}
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Spin the Wheel</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      overflow: hidden;
    }

    .wheel-container {
      position: relative;
    }

    .wheel {
      width: 300px;
      height: 300px;
      border-radius: 50%;
      border: 5px solid #ccc;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    canvas {
      width: 100%;
      height: 100%;
    }

    .pin {
      position: absolute;
      top: -10px;
      left: 50%;
      transform: translateX(-50%);
      width: 0;
      height: 0;
      border-left: 10px solid transparent;
      border-right: 10px solid transparent;
      border-bottom: 20px solid red;
      z-index: 10;
    }

    .controls {
      margin-top: 20px;
      text-align: center;
    }

    .spin-btn {
      padding: 10px 20px;
      font-size: 16px;
      background-color: green;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    .spin-btn:hover {
      background-color: darkgreen;
    }

    .close-btn {
      padding: 10px 20px;
      font-size: 16px;
      background-color: red;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      margin-top: 10px;
    }

    .close-btn:hover {
      background-color: darkred;
    }
  </style>
</head>
<body>
  <div class="wheel-container">
    <div class="pin"></div>
    <canvas id="wheelCanvas" class="wheel"></canvas>
  </div>
  <div class="controls">
    <button id="spin" class="spin-btn">Spin</button>
    <button id="close" class="close-btn">Close</button>
  </div>

  <script>
    const canvas = document.getElementById("wheelCanvas");
    const ctx = canvas.getContext("2d");
    const segments = [
      "10% Off", "20% Off", "Free Shipping", "No Prize",
      "5% Off", "15% Off", "Buy 1 Get 1 Free", "25% Off"
    ];
    const colors = ["#FFEB3B", "#FF5722"];
    const spinButton = document.getElementById("spin");
    const closeButton = document.getElementById("close");

    let startAngle = 0;
    const arc = Math.PI / (segments.length / 2);
    let spinAngle = 0;
    let isSpinning = false;

    // Draw the wheel
    function drawWheel() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      const outsideRadius = canvas.width / 2 - 5;
      const textRadius = canvas.width / 2 - 40;
      const insideRadius = 10;

      for (let i = 0; i < segments.length; i++) {
        const angle = startAngle + i * arc;
        ctx.fillStyle = colors[i % colors.length];
        ctx.beginPath();
        ctx.arc(canvas.width / 2, canvas.height / 2, outsideRadius, angle, angle + arc, false);
        ctx.arc(canvas.width / 2, canvas.height / 2, insideRadius, angle + arc, angle, true);
        ctx.fill();

        ctx.save();
        ctx.fillStyle = "white";
        ctx.translate(
          canvas.width / 2 + Math.cos(angle + arc / 2) * textRadius,
          canvas.height / 2 + Math.sin(angle + arc / 2) * textRadius
        );
        ctx.rotate(angle + arc / 2 + Math.PI / 2);
        ctx.fillText(segments[i], -ctx.measureText(segments[i]).width / 2, 0);
        ctx.restore();
      }
    }

    // Rotate the wheel
    function rotateWheel() {
      spinAngle += Math.random() * 10 + 30;
      spinAngle %= 360;

      const totalSpins = 10; // Total spin cycles for smooth deceleration
      let count = 0;
      const interval = setInterval(() => {
        startAngle += Math.PI / 30;
        drawWheel();
        count++;

        if (count > totalSpins) {
          clearInterval(interval);
          const finalSegment = Math.floor((spinAngle / (360 / segments.length)) % segments.length);
          alert(`You won: ${segments[finalSegment]}!`);
        }
      }, 50);
    }

    spinButton.addEventListener("click", () => {
      if (!isSpinning) {
        isSpinning = true;
        rotateWheel();
      }
    });

    closeButton.addEventListener("click", () => {
      alert("Wheel closed");
    });

    drawWheel();
  </script>
</body>
</html>

{% schema %}
  {
    "name": "Spin to Win",
    "settings": [],
    
  "presets": [
    {
      "name": "Spin to Win"
    }
  ]
  }
{% endschema %}